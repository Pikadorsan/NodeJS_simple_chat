<!DOCTYPE html>
<html>
<head>
  <title>Czat</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 20px;
      display: flex;
    }
    #chat-container {
      flex: 1;
    }
    #message-container {
      height: 400px;
      overflow-y: scroll;
      border: 1px solid #ccc;
      padding: 10px;
    }
    #message-container p {
      margin: 5px 0;
    }
    #input-container {
      margin-top: 10px;
    }
    #input-container input[type="text"] {
      width: 300px;
      padding: 5px;
    }
    #input-container input[type="submit"] {
      padding: 5px 10px;
    }
    #user-container {
      width: 200px;
      padding: 10px;
      border: 1px solid #ccc;
      margin-left: 20px;
    }
    #user-container p {
      margin: 5px 0;
    }
  </style>
</head>
<body>
  <div id="chat-container">
    <div id="message-container"></div>
    <div id="input-container">
      <input type="text" id="message-input" placeholder="Wpisz wiadomość" />
      <input type="submit" id="send-button" value="Wyślij" />
    </div>
  </div>
  <div id="user-container"></div>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();

    // Przesłanie imienia użytkownika do serwera przy połączeniu
    const username = prompt('Podaj swoje imię:');
    socket.emit('setUsername', { username: username });

    // Obsługa przycisku "Wyślij"
    document.getElementById('send-button').addEventListener('click', () => {
      const messageInput = document.getElementById('message-input');
      const message = messageInput.value.trim();

      if (message !== '') {
        socket.emit('message', message);
        messageInput.value = '';
      }
    });

    // Obsługa otrzymanej wiadomości
    socket.on('message', (data) => {
      const messageContainer = document.getElementById('message-container');
      const newMessage = document.createElement('p');
      newMessage.textContent = data.username + ': ' + data.message;
      messageContainer.appendChild(newMessage);
    });

    // Obsługa zaktualizowanej listy użytkowników
    socket.on('userList', (userList) => {
      const userContainer = document.getElementById('user-container');
      userContainer.innerHTML = '';

      userList.forEach((username) => {
        const userElement = document.createElement('p');
        userElement.textContent = username;
        userContainer.appendChild(userElement);
      });
    });
  </script>
</body>
</html>
